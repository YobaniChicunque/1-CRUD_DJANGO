Pasos

1 Instalar:
Git
Xammp
SqlYog
Python
Visual Studio Code
Instalar la extesnion Python para Visual Studio Code

2 Crear un carpeta con el nombre Django en el escritorio
o en cualquier parte.
 
3 Abrir carpeta Django con VSCODE.
4 Instalar Django en local(terminal):

pip install Django==3.2.8

5 Crear proyecto Django:

django-admin startproject sistema			 

6 Cerrar carpeta Django.

7 Abrir carpeta del proyecto, es decir la carpeta sistema.

8 Correr el servidor(terminal):

py manage.py runserver

9 Detener el servidor(terminal):

Control+c

10 Crear un entorno virtual (terminal):

py -m venv env

11 Activar entorno virtual(terminal):

env\scripts\activate

12 Instalar complementos en el entorno virtual(terminal):

pip install Django==3.2.8
pip install Pillow==9.3.0
pip install PyMySQL==1.0.2

nota: recuerda que para instala las dependecias
debes estar conectado a internet.

13 Activar el servidor MySQL(xampp).

14 Crear una base de datos para el proyecto(sqlyog).

15 Conectar la base de datos con Django:

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'veterinaria',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': 'localhost',
        'PORT': '3306'
    }
}

16 Importart modulo MySQL en sistema>_init_.py

import pymysql
pymysql.install_as_MySQLdb()

17 Correr el servidor(terminal) para verificar
que no haya ningun error de la conxion.
Si el servidor corre sin ningun problema
sisgnifica que la conexion ha sido exitosa, de
lo contraio aparece un mesaje de error en
la terminal.

17 Hacer migraciones de los modelos(tablas)
que vienen por defecto en nuestro proyecto(terminal).
Si todo esta bien deberian crearse unas tablas
en nuestra base de datos(revisar en sqlyog).

py manage.py migrate

18 Crear superusuario(terminal):

py manage.py createsuperuser

username:admin
email:yobanichicunque@gmail.com
password:123

19 Ir a la base de datos en sqlyog, abrir la tabla auth_user,
y en los siguientes campos poner el nombre y apellido del usuario:

name:Yobani
lastname:Chicunque

20 Ir al Panel de administracion y loguearse con
username y password:

username:admin
password:123

24 Crear una aplicacion(terminal):

py manage.py startapp mascotas

25 Añadir la aplicacion en la configuracion del proyecto
en sistema>settings.py

21 Hacer modelos y relaciones 
en mascotas>models.py

#Ejemplo de relacion: de uno a muchos y de muchos a muchos
persona = models.ForeignKey(Persona, null=True, blank=True, on_delete=models.CASCADE)
vacuna = models.ManyToManyField(Vacuna, blank=True)

22 Hacer las migraciones de los modelos(terminal):

py manage.py makemigrations
py manage.py migrate

Nota: Para hacer modificaciones de los modelos(tablas), por ejemplo, 
cambiar el nombre de los camposse edita el el modelo creado y se 
ejecutarn los dos comandos anteriores.

py manage.py makemigrations
py manage.py migrate

23 Registrar los modelos en sistema>mascotas>admin.py

from django.contrib import admin
from .models import Mascota

admin.site.register(Mascota)

Nota: con esto puedo hacer pruebas desde el user(admin) para saber si se estan guardando mis registros
en mi tablas de la base de datos, sin antes haber creado un formulario de registro
en html.


25 Abrir shell Django y Hacer Querysets(consultas) de la base de datos

py manage.py shell

26 importar los modelos de la aplicacion, para poder hacer consultas(Querysets)
(shell Django)

import mascotas.models import Persona, Vacuna, Mascota

27 hacer consultas(Querysets) en la shell Django
Mascota.objects.all()

28 insertar registros en la sehll Django
Mascota.objects.create(nombre="Dalia",
edad=2,
foto="imagenes/1.jpg",
persona_id=1
)

-------------parte 2-----------------------------


1 crear primer templates en mascotas>templates>paginas

 inicio.html

2 crear primera vista en mascotas>view.py

def inicio(request):

from django.shortcuts import render, redirect
from django.http import HttpResponse
from .models import Mascota
from .forms import MascotaForm

return render(request, 'paginas/inicio.html')

3 crear primera url mascotas>urls.py

from django.urls import path
from . import views
from django.conf import settings
from django.contrib.staticfiles.urls import static

urlpatterns = [
    path('', views.inicio, name="inicio"),
]

4 Añadir url de la aplicacion a las url del sistema
en sistema>urls

from django.contrib import admin
from django.urls import path
from django.urls import include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('',include('mascotas.urls')),
]

5 Crear un template base que haga herencia de templates 
en mascotas>templates

base.html

6 mostrar todos los registros de una tabla 
en un template. Es decir crear un template,
una vista y una url





















